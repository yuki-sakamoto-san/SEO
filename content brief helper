import os
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

def google_search(keyword, location, api_key, cse_id):
    try:
        # Set up the Custom Search API client
        service = build("customsearch", "v1", developerKey=api_key)
        
        # Perform the search
        result = service.cse().list(q=keyword, cx=cse_id, gl=location).execute()
        return result['items']
    except HttpError as e:
        print(f"An error occurred: {e}")
        return []

def analyze_serp_features(search_results):
    image_opportunities = 0
    video_opportunities = 0
    snippet_opportunities = 0
    people_also_ask = []
    other_serp_features = []

    for result in search_results:
        title = result['title'].lower()
        snippet = result.get('snippet', '').lower()

        if 'image' in title or 'photo' in title or 'picture' in title or 'img' in snippet:
            image_opportunities += 1
        
        if 'video' in title or 'youtube' in snippet:
            video_opportunities += 1

        if 'featured snippet' in snippet:
            snippet_opportunities += 1

        if 'people also ask' in title or 'people also ask' in snippet:
            people_also_ask.append(result['title'])

        if 'knowledge graph' in title or 'knowledge graph' in snippet:
            other_serp_features.append('Knowledge Graph')
        
        if 'site links' in title or 'site links' in snippet:
            other_serp_features.append('Site Links')

    return {
        'image_opportunities': image_opportunities,
        'video_opportunities': video_opportunities,
        'snippet_opportunities': snippet_opportunities,
        'people_also_ask': people_also_ask,
        'other_serp_features': other_serp_features
    }

def generate_content_brief(keyword, location, search_results, serp_analysis):
    # Template for the content brief
    content_brief = f"""
    Content Brief for SEO Keyword: {keyword}
    Location: {location}
    
    1. Target SEO Keyword:
       - {keyword}
    
    2. Search Results Analysis:
    """
    
    for index, result in enumerate(search_results, start=1):
        content_brief += f"""
        {index}. Title: {result['title']}
           URL: {result['link']}
           Snippet: {result['snippet']}
        """
    
    content_brief += """
    
    3. Recommended Content Structure:
       - Introduction: Briefly introduce the topic and its importance.
       - Main Points: List and elaborate on the main points related to the keyword.
       - Conclusion: Summarize the key takeaways and encourage reader engagement.
    
    4. Additional SEO Recommendations:
       - Include relevant keywords naturally within the content.
       - Use headings and subheadings to improve readability.
       - Incorporate images and videos where applicable.
       - Ensure the content is mobile-friendly.
    
    5. Image Opportunities:
       - """ + ("Yes" if serp_analysis['image_opportunities'] > 0 else "No") + """
    
    6. Video Opportunities:
       - """ + ("Yes" if serp_analysis['video_opportunities'] > 0 else "No") + """
    
    7. Featured Snippet Opportunities:
       - """ + ("Yes" if serp_analysis['snippet_opportunities'] > 0 else "No") + """
    
    8. People Also Ask Questions:
       - """ + "\n       - ".join(serp_analysis['people_also_ask']) + """
    
    9. Other SERP Features:
       - """ + "\n       - ".join(serp_analysis['other_serp_features']) + """
    """
    
    return content_brief

def main():
    # User inputs
    keyword = input("Enter the SEO keyword: ")
    location = input("Enter the Google location (e.g., 'us' for United States): ")
    
    # API credentials
    api_key = 'YOUR API KEY'  # Replace with your actual API key
    cse_id = 'CSE ID FROM GOOGLE'  # Replace with your actual Custom Search Engine ID

    if not api_key or not cse_id:
        print("API key and/or CSE ID are not set. Please set them as environment variables.")
        return
    
    # Get search results
    search_results = google_search(keyword, location, api_key, cse_id)
    
    if not search_results:
        print("No search results found or an error occurred.")
        return
    
    # Analyze search results for SERP features
    serp_analysis = analyze_serp_features(search_results)
    
    # Generate content brief
    content_brief = generate_content_brief(keyword, location, search_results, serp_analysis)
    
    # Print the content brief
    print(content_brief)

if __name__ == "__main__":
    main()
